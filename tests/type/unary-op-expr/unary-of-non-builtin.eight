// RUN: %not %eightc %s 2>&1 | %fc %s

// This is technically legal, but you can't construct a function type in the
// language. Maybe it's something worth keeping around for the future? Maybe it
// is worth improving the error message? It is quite bogus code however.

trait Neg<A, R> {
  fn neg(a: A) -> R;
}

intrinsic_fn garbage<T>(a: T) -> T;

fn test(a: i32) -> i32 {
  let k = -garbage;
  return 0;
}

// CHECK-LABEL: sema::trait_missing_instance
// CHECK: trait Neg does not have instance Neg<fn(_) -> _, _>
