---
source: compiler/hachi-hir/tests/lowering_tests.rs
expression: doc
input_file: compiler/hachi-hir/tests/data/kitchen_sink.test
snapshot_kind: text
---
module {
  // module types
  type Matrix = {
    buf: *i32,
    c: i32,
    r: i32,
  };
  type bool = bool;
  type i32 = i32;
  type void = void;
  
  // module functions
  intrinsic_fn free<$0>(ptr: *$0) -> void;
  intrinsic_fn malloc<$0>(size: i32) -> *$0;
  fn matrix_matrix_multiply<>(a: Matrix, b: Matrix) -> Matrix {
    if (a.r != b.c){
      panic::<>();
    } else {
    
    }
    let c: _ = new Matrix {
      r: a.r,
      c: b.c,
      buf: malloc::<>(a.r * b.c * 4),
    };
    {
      let i: _ = 0;
      while (i < a.r) {
        {
          let j: _ = 0;
          while (j < b.c) {
            let sum: _ = 0;
            {
              let k: _ = 0;
              while (k < a.c) {
                sum = sum + a.buf[i * a.c + k] * b.buf[k * b.c + j];
              }
              k = k + 1;
            }
            c.buf[i * b.c + j] = sum;
          }
          j = j + 1;
        }
      }
      i = i + 1;
    }
    return c;
  }
}
