---
source: compiler/hachi-hir/tests/lowering_tests.rs
expression: doc
input_file: compiler/hachi-hir/tests/data/lowering/record_decl.test
snapshot_kind: text
---
module {
  // module types
  type Node = {
    next: *Node,
    value: i32,
  }
  
  // module functions
  fn append<>(node: Node, value: i32) -> unit {
    {
      let curr: _ = node::_;
      while (curr::_.next::_ != 0::_::_) {
        curr::_ = curr::_.next::_::_;
      }
    }
    let node: _ = malloc::_::<Node>(8::_ + 4::_::_)::_;
    node::_.value::_ = value::_::_;
    node::_.next::_ = 0::_::_;
    curr::_.next::_ = node::_::_;
  }
  fn prepend<>(node: Node, value: i32) -> Node {
    return new Node {
      value: value::_,
      next: node::_,
    }::_;
  }
}
